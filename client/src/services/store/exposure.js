import { createSlice } from '@reduxjs/toolkit';
import { mergeObject } from './utils';

export const getInitialState = () => ({
  publicForm: {
    study: '',
    strategy: '',
    signatureSet: '',
    cancer: '',
    cancerOnly: true,
  },
  userForm: {},
  main: {
    displayTab: 'instructions',
    exposureSignature: [],
    exposureCancer: [],
    refSigData: [],
    study: '',
    studyOptions: [],
    strategy: '',
    strategyOptions: [],
    cancer: '',
    cancerOptions: [],
    rsSet: '',
    rsSetOptions: [],
    useCancerType: true,
    signatureNameOptions: [],
    userNameOptions: [],
    publicSampleOptions: [],
    userSampleOptions: [],
    genome: 'GRCh37',
    genomeOptions: ['GRCh37', 'GRCh38', 'mm10'],
    exposureFile: '',
    matrixFile: '',
    signatureFile: '',
    usePublicSignature: true,
    source: 'public',
    loading: false,
    projectID: '',
    openSidebar: true,
    submitted: false,
  },
  tmb: {
    plotPath: '',
    debugR: '',
    err: '',
    loading: false,
  },
  tmbSignatures: {
    plotPath: '',
    plotURL: '',
    debugR: '',
    err: '',
    loading: false,
  },
  msBurden: {
    signatureName: '',
    plotPath: '',
    debugR: '',
    err: '',
    loading: false,
  },
  msAssociation: {
    both: true,
    signatureName1: '',
    signatureName2: '',
    plotPath: '',
    txtPath: '',
    debugR: '',
    err: '',
    loading: false,
  },
  msDecomposition: {
    plotPath: '',
    txtPath: '',
    debugR: '',
    err: '',
    loading: false,
  },
  msLandscape: {
    variableFile: '',
    plotPath: '',
    txtPath: '',
    debugR: '',
    err: '',
    loading: false,
  },
  msPrevalence: {
    mutation: '100',
    plotPath: '',
    debugR: '',
    err: '',
    loading: false,
  },
  msIndividual: {
    sample: '',
    plotPath: '',
    debugR: '',
    err: '',
    loading: false,
  },
});

export const { actions, reducer } = createSlice({
  name: 'exposure',
  initialState: getInitialState(),
  reducers: {
    mergeExposure: mergeObject,
    resetExposure: getInitialState,
  },
});
