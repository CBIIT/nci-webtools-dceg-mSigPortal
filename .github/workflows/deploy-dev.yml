name: Deploy msigportal-dev
on: 
  push:
    branches:
      - '*-dev'
  workflow_dispatch:

jobs:
  CodeQL:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: List environmental variables
        run: env

      - name: List files in the repository
        run: ls ${{ github.workspace }}

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1.0.20
        with:
          languages: 'javascript'
          queries: security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  Deploy:
    environment: Dev Deployment
    runs-on: self-hosted
    env:
      DOCKER_BUILDKIT: 1
      BACKEND_IMAGE_TAG: backend-{{ github.sha }}
      BACKEND_IMAGE_TAG_LATEST: backend-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: List files in the repository
        run: ls ${{ github.workspace }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build/Push Backend Image
        env:
          IMAGE_NAME: '${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}'
        run: |
          docker build \
            -t ${{ env.IMAGE_NAME }}:${{ env.BACKEND_IMAGE_TAG }} \
            -t ${{ env.IMAGE_NAME }}:${{ env.BACKEND_IMAGE_TAG_LATEST }} \
            --cache-from ${{ env.IMAGE_NAME }}:${{ env.BACKEND_IMAGE_TAG_LATEST }} \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            -f docker/backend.dockerfile \
            ${{ github.workspace }}
          
          docker push ${{ env.IMAGE_NAME }}:${{ env.BACKEND_IMAGE_TAG }}
          docker push ${{ env.IMAGE_NAME }}:${{ env.BACKEND_IMAGE_TAG_LATEST }}
          